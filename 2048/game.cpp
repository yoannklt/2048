#include "game.hpp"
#include <vector>

#define KEY_UP 72
#define KEY_DOWN 80
#define KEY_LEFT 75
#define KEY_RIGHT 77


Game::Game() {
}

Game::~Game() {}

void Game::handleEvents() {
	if (grid.hasLost()) 
		isRunning = false;

	std::cout << std::endl << "Swipe in any direction using arrow keys " << std::endl;


	bool badKey = true;
	while (badKey)
	{
		badKey = false;
		int c = 0; 
		switch ((c = _getch() ))
		{
		case KEY_UP: 
			grid.setVect(0, -1);
			break;

		case KEY_DOWN:
			grid.setVect(0, 1);
			break;

		case KEY_LEFT:
			grid.setVect(-1, 0);
			break;

		case KEY_RIGHT:
			grid.setVect(1, 0);
			break;

		default:
			badKey = true;
			break;
		}
	}
	

}

void Game::update() {
	if (grid.hasLost()) {
		isRunning = false;
		std::cout << std::endl << "Perdu c'eststd::endl;
	}
	grid.slide();
	grid.generateRandomCell();
}

void Game::render()
{
	grid.render(); 
}



